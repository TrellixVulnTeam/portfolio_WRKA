{"ast":null,"code":"var _jsxFileName = \"/Users/cooper6101/Desktop/portfolioSite/portfolio/client/src/components/CustomUpload/ImageUpload.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; // used for making the prop types of this component\n\nimport PropTypes from \"prop-types\";\nimport { Button } from \"reactstrap\";\nimport defaultImage from \"assets/img/image_placeholder.jpg\";\nimport defaultAvatar from \"assets/img/placeholder.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ImageUpload(props) {\n  _s();\n\n  const [file, setFile] = React.useState(null);\n  const [imagePreviewUrl, setImagePreviewUrl] = React.useState(props.avatar ? defaultAvatar : defaultImage);\n  const fileInput = /*#__PURE__*/React.createRef();\n\n  const handleImageChange = e => {\n    e.preventDefault();\n    let reader = new FileReader();\n    let file = e.target.files[0];\n\n    reader.onloadend = () => {\n      setFile(file);\n      setImagePreviewUrl(reader.result);\n    };\n\n    if (file) {\n      reader.readAsDataURL(file);\n    }\n  }; // const handleSubmit = e => {\n  // e.preventDefault();\n  // this.state.file is the file/image uploaded\n  // in this function you can save the image (this.state.file) on form submit\n  // you have to call it yourself\n  // };\n\n\n  const handleClick = () => {\n    fileInput.current.click();\n  };\n\n  const handleRemove = () => {\n    setFile(null);\n    setImagePreviewUrl(props.avatar ? defaultAvatar : defaultImage);\n    fileInput.current.value = null;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fileinput text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleImageChange,\n      ref: fileInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fileinput-new thumbnail img-raised\" + (props.avatar ? \" img-circle\" : \"\"),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imagePreviewUrl,\n        alt: \"...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: file === null ? /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn-round\",\n        color: \"default\",\n        onClick: handleClick,\n        children: props.avatar ? \"Add Photo\" : \"Select image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn-round\",\n          color: \"default\",\n          onClick: handleClick,\n          children: \"Change\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), props.avatar ? /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n          color: \"danger\",\n          className: \"btn-round\",\n          onClick: handleRemove,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-times\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), \" Remove\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ImageUpload, \"9F6ik790T/NAC7acLyjdgSC127Q=\");\n\n_c = ImageUpload;\nImageUpload.propTypes = {\n  avatar: PropTypes.bool\n};\nexport default ImageUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"sources":["/Users/cooper6101/Desktop/portfolioSite/portfolio/client/src/components/CustomUpload/ImageUpload.js"],"names":["React","PropTypes","Button","defaultImage","defaultAvatar","ImageUpload","props","file","setFile","useState","imagePreviewUrl","setImagePreviewUrl","avatar","fileInput","createRef","handleImageChange","e","preventDefault","reader","FileReader","target","files","onloadend","result","readAsDataURL","handleClick","current","click","handleRemove","value","propTypes","bool"],"mappings":"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","sourcesContent":["import React from \"react\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nimport { Button } from \"reactstrap\";\n\nimport defaultImage from \"assets/img/image_placeholder.jpg\";\nimport defaultAvatar from \"assets/img/placeholder.jpg\";\n\nfunction ImageUpload(props) {\n  const [file, setFile] = React.useState(null);\n  const [imagePreviewUrl, setImagePreviewUrl] = React.useState(\n    props.avatar ? defaultAvatar : defaultImage\n  );\n  const fileInput = React.createRef();\n  const handleImageChange = (e) => {\n    e.preventDefault();\n    let reader = new FileReader();\n    let file = e.target.files[0];\n    reader.onloadend = () => {\n      setFile(file);\n      setImagePreviewUrl(reader.result);\n    };\n    if (file) {\n      reader.readAsDataURL(file);\n    }\n  };\n  // const handleSubmit = e => {\n  // e.preventDefault();\n  // this.state.file is the file/image uploaded\n  // in this function you can save the image (this.state.file) on form submit\n  // you have to call it yourself\n  // };\n  const handleClick = () => {\n    fileInput.current.click();\n  };\n  const handleRemove = () => {\n    setFile(null);\n    setImagePreviewUrl(props.avatar ? defaultAvatar : defaultImage);\n    fileInput.current.value = null;\n  };\n  return (\n    <div className=\"fileinput text-center\">\n      <input type=\"file\" onChange={handleImageChange} ref={fileInput} />\n      <div\n        className={\n          \"fileinput-new thumbnail img-raised\" +\n          (props.avatar ? \" img-circle\" : \"\")\n        }\n      >\n        <img src={imagePreviewUrl} alt=\"...\" />\n      </div>\n      <div>\n        {file === null ? (\n          <Button className=\"btn-round\" color=\"default\" onClick={handleClick}>\n            {props.avatar ? \"Add Photo\" : \"Select image\"}\n          </Button>\n        ) : (\n          <span>\n            <Button className=\"btn-round\" color=\"default\" onClick={handleClick}>\n              Change\n            </Button>\n            {props.avatar ? <br /> : null}\n            <Button color=\"danger\" className=\"btn-round\" onClick={handleRemove}>\n              <i className=\"fa fa-times\" /> Remove\n            </Button>\n          </span>\n        )}\n      </div>\n    </div>\n  );\n}\n\nImageUpload.propTypes = {\n  avatar: PropTypes.bool,\n};\n\nexport default ImageUpload;\n"]},"metadata":{},"sourceType":"module"}